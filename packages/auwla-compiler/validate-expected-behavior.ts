#!/usr/bin/env node

import { compileTSX } from './src/tsx-only-compiler.js'
import { readFileSync, writeFileSync } from 'fs'

console.log('üß™ Validating Expected Props-Based Behavior')
console.log('=' .repeat(60))

try {
  // Read the input file
  const input = readFileSync('test-expected-props-behavior.tsx', 'utf8')
  
  console.log('üìÑ INPUT TSX (Expected Pattern):')
  console.log('Key points:')
  console.log('- UserAvatar receives user as prop with type annotation')
  console.log('- ThemeToggle receives theme and onToggle as props with types')
  console.log('- ProfilePage passes global state as props to components')
  console.log('')
  
  // Compile it
  const output = compileTSX(input)
  
  // Save output
  writeFileSync('test-expected-props-behavior.js', output)
  
  console.log('üìÑ GENERATED OUTPUT:')
  console.log(output)
  console.log('\n' + '=' .repeat(60) + '\n')
  
  // Analyze the expected behavior
  console.log('üîç EXPECTED BEHAVIOR ANALYSIS:')
  
  // Check if global helpers are in page scope
  const hasGlobalInPageScope = output.includes('// Logic that was outside page scope ‚Üí now inside page scope')
  console.log(`‚úÖ Global helpers in page scope: ${hasGlobalInPageScope ? 'YES' : 'NO'}`)
  
  // Check if components have proper TypeScript props
  const userAvatarHasProps = output.includes('user: Ref<any>') || output.includes('user,') 
  const themeToggleHasProps = output.includes('theme: Ref<string>') || output.includes('theme,')
  
  console.log(`‚úÖ UserAvatar has typed props: ${userAvatarHasProps ? 'YES' : 'NO'}`)
  console.log(`‚úÖ ThemeToggle has typed props: ${themeToggleHasProps ? 'YES' : 'NO'}`)
  
  // Check if main component passes props correctly
  const passesUserProp = output.includes('UserAvatar') && (output.includes('user={user}') || output.includes('user: user'))
  const passesThemeProps = output.includes('ThemeToggle') && (output.includes('theme={theme}') || output.includes('theme: theme'))
  
  console.log(`‚úÖ Passes user prop to UserAvatar: ${passesUserProp ? 'YES' : 'NO'}`)
  console.log(`‚úÖ Passes theme props to ThemeToggle: ${passesThemeProps ? 'YES' : 'NO'}`)
  
  console.log('\nüí° EXPECTED COMPILATION RESULT:')
  console.log('1. ‚úÖ Global variables (user, theme, fetchUser, toggleTheme) ‚Üí inside ProfilePage function')
  console.log('2. ‚úÖ UserAvatar and ThemeToggle ‚Üí exported components with typed props')
  console.log('3. ‚úÖ ProfilePage ‚Üí passes global state as props to child components')
  console.log('4. ‚úÖ No reference errors ‚Üí all variables accessible through proper scoping')
  
  console.log('\nüéØ THIS IS THE CORRECT PATTERN FOR @PAGE FILES WITH MULTIPLE COMPONENTS!')
  console.log('üìÅ Output saved to: test-expected-props-behavior.js')
  
} catch (error) {
  console.error('‚ùå Error:', error)
}