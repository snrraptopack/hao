<script>
import { ref, type Ref } from 'auwla'
import { if as $if, each as $each } from 'auwla/template'

interface Todo {
  id: number
  text: Ref<string>
  done: Ref<boolean>
  isEditing: Ref<boolean>
}

const todos = ref<Todo[]>([
  { 
    id: 1, 
    text: ref('Learn Auwla'), 
    done: ref(true),
    isEditing: ref(false)
  },
  { 
    id: 2, 
    text: ref('Build something awesome'), 
    done: ref(false),
    isEditing: ref(false)
  }
])

const newTodo = ref('')

function addTodo() {
  if (!newTodo.value.trim()) return
  todos.value = [...todos.value, {
    id: Date.now(),
    text: ref(newTodo.value),
    done: ref(false),
    isEditing: ref(false)
  }]
  newTodo.value = ''
}

function toggleTodo(todo: Todo) {
  todo.done.value = !todo.done.value
}

function deleteTodo(id: number) {
  todos.value = todos.value.filter(t => t.id !== id)
}

function startEdit(todo: Todo) {
  todo.isEditing.value = true
}

function saveEdit(todo: Todo, newText: string) {
  if (newText.trim()) {
    todo.text.value = newText.trim()
  }
  todo.isEditing.value = false
}

function cancelEdit(todo: Todo) {
  todo.isEditing.value = false
}
</script>

function TodoList() {
  return (
    <div class="min-h-screen bg-gradient-to-br from-purple-50 to-blue-50 py-8 px-4">
      <div class="max-w-2xl mx-auto">
        <div class="bg-white rounded-2xl shadow-xl p-8">
          <h1 class="text-4xl font-bold text-gray-800 mb-8 text-center">
            âœ¨ Todo List
          </h1>
          
          <div class="mb-6 flex gap-2">
            <input 
              type="text" 
              value={newTodo}
              onInput={(e) => newTodo.value = e.target.value}
              placeholder="What needs to be done?"
              class="flex-1 px-4 py-3 border-2 border-gray-200 rounded-lg focus:border-purple-500 focus:outline-none transition-colors"
            />
            <button 
              onClick={addTodo}
              class="px-6 py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors font-medium"
            >
              Add
            </button>
          </div>
          
          <ul class="space-y-2">
            {$each(todos, (todo) => (
              <li key={todo.id} class="group">
                {$if(todo.isEditing.value, () => (
                  <div class="flex gap-2 p-3 bg-blue-50 rounded-lg border-2 border-blue-300">
                    <input 
                      type="text"
                      value={todo.text}
                      onInput={(e) => todo.text.value = e.target.value}
                      class="flex-1 px-3 py-2 border border-gray-300 rounded focus:border-blue-500 focus:outline-none"
                    />
                    <button
                      onClick={() => saveEdit(todo, todo.text.value)}
                      class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors"
                    >
                      Save
                    </button>
                    <button
                      onClick={() => cancelEdit(todo)}
                      class="px-4 py-2 bg-gray-400 text-white rounded hover:bg-gray-500 transition-colors"
                    >
                      Cancel
                    </button>
                  </div>
                ), () => (
                  <div class={todo.done.value ? 'flex items-center gap-3 p-3 bg-gray-50 rounded-lg border-2 border-gray-200 opacity-60' : 'flex items-center gap-3 p-3 bg-white rounded-lg border-2 border-gray-200 hover:border-purple-300 transition-all'}>
                    <input 
                      type="checkbox" 
                      checked={todo.done}
                      onClick={() => toggleTodo(todo)}
                      class="w-5 h-5 text-purple-600 rounded focus:ring-2 focus:ring-purple-500 cursor-pointer"
                    />
                    <span class={todo.done.value ? 'flex-1 text-gray-500 line-through' : 'flex-1 text-gray-800'}>
                      {todo.text.value}
                    </span>
                    <button
                      onClick={() => startEdit(todo)}
                      class="opacity-0 group-hover:opacity-100 px-3 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600 transition-all"
                    >
                      Edit
                    </button>
                    <button
                      onClick={() => deleteTodo(todo.id)}
                      class="opacity-0 group-hover:opacity-100 px-3 py-1 text-sm bg-red-500 text-white rounded hover:bg-red-600 transition-all"
                    >
                      Delete
                    </button>
                  </div>
                ))}
              </li>
            ))}
          </ul>
          
          {$if(todos.value.length === 0, () => (
            <div class="text-center py-12">
              <p class="text-gray-400 text-lg">No todos yet! Add one above to get started.</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  )
}
